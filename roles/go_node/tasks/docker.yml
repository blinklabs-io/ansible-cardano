---
- name: Initialize go_node_docker_volumes fact
  set_fact:
    go_node_docker_volumes: '{{ go_node_docker_volumes | default([]) + [item] }}'
  loop:
    - '{{ go_node_ipc_dir }}:{{ go_node_ipc_container_dir }}'
    - '{{ go_node_db_dir }}:{{ go_node_db_container_dir }}'

- name: Add config to go_node_docker_volumes fact
  set_fact:
    go_node_docker_volumes: '{{ go_node_docker_volumes | default([]) + [item] }}'
  loop:
    - '{{ go_node_config_file }}:{{ go_node_config_file }}'
  when: go_node_manage_config

- name: Add topology to go_node_docker_volumes fact
  set_fact:
    go_node_docker_volumes: '{{ go_node_docker_volumes | default([]) + [item] }}'
  loop:
    - '{{ go_node_topology_file }}:{{ go_node_topology_file }}'
  when: go_node_manage_topology

- name: Add keys to go_node_docker_volumes fact
  set_fact:
    go_node_docker_volumes: '{{ go_node_docker_volumes | default([]) + [item] }}'
  loop:
    - '{{ go_node_keys_dir }}:{{ go_node_keys_container_dir }}'
  when: go_node_block_producer | bool

- name: Create container
  docker_container:
    name: '{{ go_node_docker_container_name }}'
    image: '{{ go_node_docker_image }}'
    command:
      - run
    restart_policy: unless-stopped
    ports:
      - '{{ go_node_port }}:{{ go_node_container_port }}'
      - '{{ go_node_metrics_port }}:{{ go_node_metrics_container_port }}'
    env:
      CARDANO_BLOCK_PRODUCER: '{{ go_node_block_producer | string }}'
      CARDANO_CONFIG: '{{ go_node_config_file }}'
      CARDANO_DATABASE_PATH: '{{ go_node_db_container_dir }}'
      CARDANO_NETWORK: '{{ go_node_network }}'
      CARDANO_NODE_SOCKET_PATH: '{{ go_node_ipc_container_dir }}/{{ go_node_socket_name }}'
      CARDANO_PORT: '{{ go_node_port | string }}'
      CARDANO_SHELLEY_KES_KEY: '{{ go_node_shelley_kes_key }}'
      CARDANO_SHELLEY_OPERATIONAL_CERTIFICATE: '{{ go_node_shelley_opcert }}'
      CARDANO_SHELLEY_VRF_KEY: '{{ go_node_shelley_vrf_key }}'
      CARDANO_SOCKET_PATH: '{{ go_node_ipc_container_dir }}/{{ go_node_socket_name }}'
      CARDANO_TOPOLOGY: '{{ go_node_topology_file }}'
      RESTORE_SNAPSHOT: '{{ go_node_restore_snapshot | string }}'
      SNAPSHOT_DIGEST: '{{ go_node_snapshot_digest }}'
    volumes: '{{ go_node_docker_volumes | list }}'
