---
- name: Create cardano-cli wrapper for Docker
  ansible.builtin.template:
    src: cardano-cli.sh.j2
    dest: '{{ cardano_node_docker_cli_script }}'
    owner: '{{ cardano_node_user }}'
    group: '{{ cardano_node_group }}'
    mode: '0755'

- name: Initialize cardano_node_docker_volumes fact
  set_fact:
    cardano_node_docker_volumes: '{{ cardano_node_docker_volumes | default([]) + [item] }}'
  loop:
    - '{{ cardano_node_ipc_dir }}:{{ cardano_node_ipc_container_dir }}'
    - '{{ cardano_node_db_dir }}:{{ cardano_node_db_container_dir }}'

- name: Add config to cardano_node_docker_volumes fact
  set_fact:
    cardano_node_docker_volumes: '{{ cardano_node_docker_volumes | default([]) + [item] }}'
  loop:
    - '{{ cardano_node_config_file }}:{{ cardano_node_config_file }}'
  when: cardano_node_manage_config

- name: Add topology to cardano_node_docker_volumes fact
  set_fact:
    cardano_node_docker_volumes: '{{ cardano_node_docker_volumes | default([]) + [item] }}'
  loop:
    - '{{ cardano_node_topology_file }}:{{ cardano_node_topology_file }}'
  when: cardano_node_manage_topology

- name: Add keys to cardano_node_docker_volumes fact
  set_fact:
    cardano_node_docker_volumes: '{{ cardano_node_docker_volumes | default([]) + [item] }}'
  loop:
    - '{{ cardano_node_keys_dir }}:{{ cardano_node_keys_container_dir }}'
  when: cardano_node_block_producer | bool

- name: Create container
  docker_container:
    command:
      - run
    image: '{{ cardano_node_docker_image }}'
    name: '{{ cardano_node_docker_container_name }}'
    env:
      CARDANO_BLOCK_PRODUCER: '{{ "true" if (cardano_node_block_producer | bool) else "false" }}'
      CARDANO_CONFIG: '{{ cardano_node_config_file }}'
      CARDANO_DATABASE_PATH: '{{ cardano_node_db_container_dir }}'
      CARDANO_NETWORK: '{{ cardano_node_network }}'
      CARDANO_NODE_SOCKET_PATH: '{{ cardano_node_ipc_container_dir }}/{{ cardano_node_socket_name }}'
      CARDANO_PORT: '{{ cardano_node_port | string }}'
      CARDANO_RTS_OPTS: '{{ cardano_node_rts_flags }}'
      CARDANO_SHELLEY_KES_KEY: '{{ cardano_node_shelley_kes_key }}'
      CARDANO_SHELLEY_OPERATIONAL_CERTIFICATE: '{{ cardano_node_shelley_opcert }}'
      CARDANO_SHELLEY_VRF_KEY: '{{ cardano_node_shelley_vrf_key }}'
      CARDANO_SOCKET_PATH: '{{ cardano_node_ipc_container_dir }}/{{ cardano_node_socket_name }}'
      CARDANO_TOPOLOGY: '{{ cardano_node_topology_file }}'
      RESTORE_SNAPSHOT: '{{ "true" if (cardano_node_restore_snapshot | bool) else "false" }}'
      SNAPSHOT_DIGEST: '{{ cardano_node_snapshot_digest }}'
    ports:
      - '{{ cardano_node_port }}:{{ cardano_node_container_port }}'
      - '{{ cardano_node_metrics_port }}:{{ cardano_node_metrics_container_port }}'
    restart_policy: unless-stopped
    stop_timeout: 300
    volumes: '{{ cardano_node_docker_volumes | list }}'
